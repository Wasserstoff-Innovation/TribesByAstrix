{
  "timestamp": "2025-04-17T20:25:30.903Z",
  "summary": {
    "total": 208,
    "passed": 208,
    "failed": 0,
    "duration": 0
  },
  "results": [
    {
      "name": "All Tests",
      "tests": [
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Profile created with ID: 0",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Duplicate username properly rejected",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Username validation properly enforced",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Profile metadata successfully updated",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Unauthorized update properly rejected",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Successfully created tribes with different join types",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Tribe configuration successfully updated",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Successfully tested different joining flows",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Tribe management access control properly enforced",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Profile created with ID: 0",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Tribe created with ID: 0",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Welcome post created with ID: 0",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "User1 successfully joined the tribe",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Collectible created with ID: 0",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Post interaction recorded",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Complete user onboarding journey successfully demonstrated",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "ProfileNFTMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Permissions configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles assigned",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Unauthorized profile update properly rejected",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Missing entry fee properly rejected",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Banned user properly rejected",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Non-member post creation properly rejected",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Post cooldown properly enforced",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Error handling throughout user journey successfully demonstrated",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostFeedManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PostMinter deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Granted admin role to PostMinter in PostFeedManager",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Setup complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Tribe creation and setup complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Member onboarding and engagement flow complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Content creation complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Post interactions complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Error handling tests complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Advanced gating scenarios complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Content discovery flow complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Post interaction scenarios complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Advanced post types complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Project created with post ID: 13",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Project update created successfully",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Project creation flow test complete",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Fundraiser created with post ID: 16",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Fundraiser contribution recorded",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Points-gated collectible created with ID: 2",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "User1 successfully claimed points-gated collectible",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Points requirement properly enforced",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Limited collectible created with ID: 3",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Supply limit properly enforced",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Collectible deactivation properly handled",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Role assignment successful",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Role-based permissions properly enforced",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Role revocation properly handled",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "RoleManager deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "TribeController deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "PointSystem deployed",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Roles configured",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test tribe created",
          "status": "passed",
          "duration": 0
        },
        {
          "name": "Test members added",
          "status": "passed",
          "duration": 0
        }
      ]
    }
  ],
  "systemInfo": {
    "memory": {
      "total": "24 GB",
      "used": "23.67 GB",
      "free": "338.83 MB",
      "percentUsed": "99%"
    },
    "cpu": "Apple M4 Pro (12 cores)",
    "disk": [
      "Filesystem        Size    Used   Avail Capacity iused ifree %iused  Mounted on",
      "/dev/disk3s1s1   460Gi    11Gi   270Gi     4%    412k  2.8G    0%   /"
    ],
    "os": "Darwin 24.3.0 arm64"
  },
  "rawOutput": "\n\n\n\n  User Journey Scenarios\n    Signup Journey\n\nStep 1: Checking username availability\nUsername 'cryptouser' is available\n\nStep 2: Creating profile\nProfile created with token ID: 0\n\nStep 3: Verifying profile data\nProfile data verified successfully\n\nStep 4: Updating profile metadata\nAvatar updated\nBio updated\nProfile updates verified\n      ✔ Should complete full signup process\n      ✔ Should handle duplicate username signup attempt\n    Login Journey\n\nStep 1: Checking NFT balance\nUser has 1 profile NFT(s)\n\nStep 2: Getting token ID by username\nFound token ID: 0\n\nStep 3: Fetching profile metadata\nProfile metadata retrieved successfully\n\nStep 4: Verifying ownership\nOwnership verified\n      ✔ Should complete full login process\n      ✔ Should handle login with non-existent profile\n      ✔ Should handle login with transferred profile\n\n  User Journey: Tribe Management\n    Scenario 1: Tribe Creation\n      ✔ Should create a public tribe successfully\n      ✔ Should create a private tribe with entry fee\n    Scenario 2: Update Tribe\n      ✔ Should allow tribe admin to update tribe config\n      ✔ Should prevent non-admin from updating tribe config\n    Scenario 3: Join a Tribe\n      ✔ Should allow instant join for public tribes\n      ✔ Should require approval for private tribes\n      ✔ Should allow admin to approve pending members\n      ✔ Should allow admin to reject pending members and return entry fee\n\n  Collectible Management Journey\n    ✔ Should create a free collectible\n\n  Community Creator Journey\n    Scenario 9.1: Creating a Community\n      ✔ Should create a public community with basic configuration\n      ✔ Should create a private community with entry fee\n      ✔ Should create an invite-only community with collectible requirement\n\n  Concurrency & Scalability Tests\n    High-Demand Collectible Drop\n      ✔ Should handle concurrent claiming from multiple users\n      ✔ Should handle supply limits correctly\n\n  Event Journey V2\n    Event Creation Scenarios\n      ✔ Should create a physical event with basic details\n      ✔ Should prevent non-organizer from creating event\n      ✔ Should test contract-level validations for event creation\n    Ticket Purchase and Management\n      ✔ Should purchase tickets successfully\n      ✔ Should refund excess payment\n      ✔ Should enforce ticket supply limits\n      ✔ Should prevent purchase with insufficient payment\n      ✔ Should handle ticket transfers correctly\n    Event Management\n      ✔ Should allow organizer to update metadata\n      ✔ Should prevent non-organizer from updating metadata\n      ✔ Should allow organizer to cancel event\n      ✔ Should prevent ticket purchase after cancellation\n      ✔ Should prevent non-organizer from canceling event\n\n  Fundraiser Journey V2\n    Fundraiser Creation Scenarios\n      ✔ Should create a standard fundraiser (73ms)\n      ✔ Should create fundraiser with multiple currencies (47ms)\n      ✔ Should create fundraiser with flexible durations (48ms)\n      ✔ Should handle different slab configurations (106ms)\n    Contribution Scenarios\n      ✔ Should simulate contribution through interaction\n      ✔ Should track multiple interactions\n      ✔ Should prevent banned members from interacting\n      ✔ Should prevent interactions with deleted fundraiser\n\n  Post Journey V2\n    Content Creator Journey\n      ✔ Should create different types of posts\n      ✔ Should handle post interactions\n      ✔ Should handle post reporting\n      ✔ Should handle post deletion\n    Moderation Journey\n      ✔ Should handle post deletion\n    Feed Management\n      ✔ Should retrieve paginated tribe feed\n      ✔ Should retrieve user-specific feed\n    Error Cases\n      ✔ Should handle invalid metadata\n      ✔ Should handle permission errors\n      ✔ Should handle rate limiting\n\n  PostMinterV2\n    Basic Post Creation\n      ✔ Should create a basic public post\n      ✔ Should create a post with attachments\n    Gated Post Creation\n      ✔ Should create a collectible-gated post\n      ✔ Should allow viewing gated post with collectible\n    Encrypted Posts\n      ✔ Should create an encrypted post\n      ✔ Should manage viewer access for encrypted posts\n    Post Interactions\n      ✔ Should track post interactions\n      ✔ Should prevent self-likes\n    Post Management\n      ✔ Should allow post deletion by owner\n      ✔ Should handle post reporting\n    Feed Management\n      ✔ Should get posts by tribe\n      ✔ Should get posts by user\n      ✔ Should handle pagination correctly\n    Post Types and Metadata\n      Community Update Posts\n        ✔ Should create a community update post\n      Event Posts\n        ✔ Should create an event post with location and time\n      Project Posts\n        ✔ Should prevent unauthorized project creation\n      Poll Posts\n        ✔ Should create a poll post with options\n      Resource Posts\n        ✔ Should create a resource post with attachments\n      Metadata Validation\n        ✔ Should reject invalid metadata format\n        ✔ Should validate required metadata fields\n        ✔ Should validate event post details\n        ✔ Should validate media content\n      Rich Media Posts\n        ✔ Should create a post with multiple media types\n\n  User Profile & Tribe Comprehensive Flows\n    1. Profile Creation & Validation\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== User Profile Creation Flow ===\nCreating profile for user1...\n✓ Profile created with ID: 0\n      ✔ Should create a valid user profile\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Duplicate Username Prevention ===\nCreating first profile with 'testuser' username...\nAttempting to create second profile with same username...\n✓ Duplicate username properly rejected\n      ✔ Should prevent creating a profile with duplicate username\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Username Format Validation ===\nTesting various invalid usernames...\n✓ Username validation properly enforced\n      ✔ Should validate username format requirements\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Profile Metadata Update ===\nCreating initial profile...\nUpdating profile metadata...\n✓ Profile metadata successfully updated\n      ✔ Should allow user to update their profile metadata\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Unauthorized Update Prevention ===\nCreating profile owned by user1...\nAttempting unauthorized update from user2...\n✓ Unauthorized update properly rejected\n      ✔ Should prevent unauthorized metadata updates\n    2. Tribe Management\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Tribe Creation with Different Join Types ===\nCreating public tribe...\nCreating private tribe...\nCreating invite-only tribe...\n✓ Successfully created tribes with different join types\n      ✔ Should create different types of tribes\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Tribe Configuration Update ===\nCreating initial public tribe...\nUpdating tribe to be private with entry fee...\nUpdating tribe metadata...\n✓ Tribe configuration successfully updated\n      ✔ Should allow updating tribe configuration\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Tribe Joining Flows ===\nSetting up public tribe...\nSetting up private tribe...\nSetting up invite code tribe...\nCreating invite code...\nUser1 joining public tribe...\nUser1 requesting to join private tribe...\nCreator approving user1 for private tribe...\nUser1 joining invite code tribe with code...\n✓ Successfully tested different joining flows\n      ✔ Should handle different tribe joining flows\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Tribe Management Access Control ===\nCreating test tribe...\nTesting member banning permissions...\nTesting tribe configuration update permissions...\n✓ Tribe management access control properly enforced\n      ✔ Should properly enforce access control in tribe management\n    3. Combined User Journeys\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Complete User Onboarding Journey ===\nUser2 creating profile...\n✓ Profile created with ID: 0\nUser2 creating a tribe...\n✓ Tribe created with ID: 0\nUser2 creating welcome post...\n✓ Welcome post created with ID: 0\nUser1 joining Alice's tribe...\n✓ User1 successfully joined the tribe\nUser2 creating tribe collectible...\n✓ Collectible created with ID: 0\nUser1 interacting with welcome post...\n✓ Post interaction recorded\n\n✓ Complete user onboarding journey successfully demonstrated\n      ✔ Should demonstrate complete user onboarding flow\n✓ RoleManager deployed\n✓ ProfileNFTMinter deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Permissions configured\n✓ Roles assigned\n\n=== Error Handling Throughout User Journey ===\nSetting up test environment...\nCreating test profile...\nCreating test tribe...\n\nTesting profile error scenarios...\n✓ Unauthorized profile update properly rejected\n\nTesting tribe membership error scenarios...\n✓ Missing entry fee properly rejected\n✓ Banned user properly rejected\n\nTesting post creation error scenarios...\n✓ Non-member post creation properly rejected\n✓ Post cooldown properly enforced\n\n✓ Error handling throughout user journey successfully demonstrated\n      ✔ Should handle error cases across the user journey\n\n  Project Controller\n    Project Creation\n      ✔ Should create a project from valid post\n      ✔ Should prevent non-creator from validating post\n    Team Management\n      ✔ Should allow adding team members\n      ✔ Should prevent non-creator from adding team members\n      ✔ Should prevent adding duplicate team members\n    Milestone Management\n      ✔ Should allow starting a milestone\n      ✔ Should allow submitting milestone deliverables\n      ✔ Should allow reviewer to approve milestone\n      ✔ Should allow reviewer to reject milestone\n      ✔ Should prevent non-reviewer from reviewing milestone\n      ✔ Should prevent submitting deliverables for non-started milestone\n      ✔ Should prevent starting milestone with incomplete dependencies\n    Security Scenarios\n      ✔ Should prevent unauthorized milestone updates\n      ✔ Should prevent unauthorized team member additions\n      ✔ Should prevent milestone review manipulation\n\n  Project Grant Journey V2\n    Project Creation Scenarios\n      ✔ Should create a project with milestones (45ms)\n      ✔ Should handle milestone submissions and reviews (88ms)\n      ✔ Should handle project status updates (51ms)\n      ✔ Should prevent unauthorized updates (176ms)\n    Project Validation Scenarios\n      ✔ Should prevent unauthorized updates (337ms)\n    Project Update Scenarios\n      ✔ Should handle progress updates (71ms)\n      ✔ Should handle milestone completion updates (64ms)\n      ✔ Should validate update permissions (140ms)\n\n  Complete User Journey Guide\n\n=== Setting up test environment ===\nDeploying core contracts...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ PostFeedManager deployed\n✓ PostMinter deployed\n✓ Granted admin role to PostMinter in PostFeedManager\nSetting up roles...\n✓ Setup complete\n\n    1. Tribe Creation & Management\n\n=== Tribe Creation & Management Flow ===\nCreating tribe...\nSetting up tribe token...\nCreating access collectible...\nUpdating tribe to NFT-gated...\n✓ Tribe creation and setup complete\n\n      ✔ Should demonstrate complete tribe creation and management flow\n    2. Member Onboarding & Engagement\n\n=== Member Onboarding & Engagement Flow ===\nUser1 claiming access NFT...\nUser1 joining tribe...\nCreating welcome post...\nUser1 creating introduction...\nAwarding engagement points...\nCreating community poll...\n✓ Member onboarding and engagement flow complete\n\n      ✔ Should demonstrate complete member onboarding and engagement flow (49ms)\n    3. Content Creation & Interactions\n\n=== Content Creation Flow ===\nCreating rich media post...\nCreating gated announcement...\nCreating interactive poll...\n✓ Content creation complete\n\n      ✔ Should demonstrate different post types and content creation (80ms)\n\n=== Post Interactions Flow ===\nUser1 interacting with post...\n✓ Post interactions complete\n\n      ✔ Should demonstrate post interactions and updates\n\n=== Comprehensive Error Handling Flow ===\n\nTesting metadata validation...\n\nTesting permission and access control...\n\nTesting rate limiting...\n✓ Error handling tests complete\n\n      ✔ Should demonstrate comprehensive error handling and edge cases\n\n=== Advanced Content Gating Flow ===\nCreating gating collectible...\nCreator claiming gating collectible...\nCreating gated post...\nTesting access control...\nUser claiming collectible and joining tribe...\n✓ Advanced gating scenarios complete\n\n      ✔ Should demonstrate advanced content gating scenarios\n\n=== Content Discovery Flow ===\nGetting tribe feed...\nGetting user feed...\nGetting filtered feed...\n✓ Content discovery flow complete\n\n      ✔ Should demonstrate content discovery and feed management\n\n=== Post Interaction Scenarios ===\n✓ Post interaction scenarios complete\n\n      ✔ Should demonstrate post interaction scenarios\n\n=== Advanced Post Types ===\nCreating rich media post...\nCreating event post...\nCreating milestone post...\n✓ Advanced post types complete\n\n      ✔ Should demonstrate advanced post types and metadata (74ms)\n    4. Project & Fundraising Management\n\n=== Project Creation Flow ===\nWaiting for cooldown...\nCreating a project post...\n✓ Project created with post ID: 13\nWaiting for cooldown before creating update...\nCreating a project update post...\n✓ Project update created successfully\nWaiting for cooldown before testing unauthorized update...\nTesting unauthorized update attempt...\n⚠️ Warning: Unauthorized update was unexpectedly allowed\n✓ Project creation flow test complete\n      ✔ Should demonstrate complete project creation flow (420ms)\n\n=== Fundraiser Creation Flow ===\nCreating a fundraiser post...\n✓ Fundraiser created with post ID: 16\nSimulating fundraiser contribution...\n✓ Fundraiser contribution recorded\n      ✔ Should demonstrate complete fundraiser flow (258ms)\n    5. Advanced Collectible Management\n\n=== Points-gated Collectible Flow ===\nSetting up points for testing...\nUser1 has 600 points\nCreating points-gated collectible...\n✓ Points-gated collectible created with ID: 2\nUser1 claiming collectible with points...\n✓ User1 successfully claimed points-gated collectible\nTesting points requirement validation...\n✓ Points requirement properly enforced\n      ✔ Should demonstrate collectible creation with points-based gating\n\n=== Collectible Management Flow ===\nCreating limited supply collectible...\n✓ Limited collectible created with ID: 3\nUsers claiming limited collectible...\n✓ Supply limit properly enforced\nTesting collectible deactivation...\n✓ Collectible deactivation properly handled\n      ✔ Should demonstrate collectible deactivation and supply limits\n    6. User Role Management & Permissions\n\n=== Role Management Flow ===\nSetting up public tribe for role testing...\nTesting role assignment...\n✓ Role assignment successful\nTesting role-based permissions...\n✓ Role-based permissions properly enforced\nTesting role revocation...\n✓ Role revocation properly handled\n      ✔ Should demonstrate comprehensive role management\n    7. Frontend Integration Guide\n\n=== FRONTEND INTEGRATION GUIDE ===\n\nThis test suite demonstrates complete user journeys that frontend developers should implement:\n\n1. User Authentication & Onboarding\n   • Connect wallet and verify identity\n   • Create/update user profile\n   • Join tribes based on interests\n   • View and manage memberships\n\n2. Community Management\n   • Create and configure tribes\n   • Set access requirements (open, invite, NFT-gated)\n   • Manage members (approve, ban, assign roles)\n   • Create collectibles and define requirements\n\n3. Content Creation & Interaction\n   • Create various post types (text, rich media, polls)\n   • Implement content gating mechanisms\n   • Handle interactions (likes, comments, shares)\n   • Implement polls and voting mechanisms\n\n4. Project & Fundraising\n   • Create detailed project proposals with milestones\n   • Implement team management with permissions\n   • Track project updates and milestone completion\n   • Create fundraisers with specific tiers/slabs\n   • Track contributions and update progress\n\n5. Collectibles & Points Management\n   • Create collectibles with different requirements\n   • Implement claiming mechanisms\n   • Track points earned through engagement\n   • Implement points redemption flows\n\n6. Error Handling\n   • Validate user inputs before submission\n   • Display appropriate error messages\n   • Handle rate limiting and cooldowns\n   • Validate permissions before actions\n\n7. Data Models\n   • Follow the exact data structures shown in tests\n   • Ensure all required fields are included\n   • Validate metadata before submission\n   • Handle BigInt values properly (for amounts)\n\nAPI Integration Patterns:\n1. Always check permissions before attempting actions\n2. Implement proper cooldown handling between post creations\n3. Handle collectible requirements and gating correctly\n4. Ensure team permissions are properly set for projects and fundraisers\n5. Always format timestamps as UNIX timestamps (seconds since epoch)\n6. Handle ETH values as strings to avoid precision loss\n\nContract Interaction Flow:\n1. Get user's wallet address and verify connection\n2. Check user's tribe memberships and permissions\n3. Load relevant tribe, collectible, or post data\n4. Validate user inputs against contract requirements\n5. Submit transactions with proper error handling\n6. Update UI based on transaction results\n7. Implement polling or event listeners for updates\n\nCommon Pitfalls to Avoid:\n1. Not handling cooldowns between post creations\n2. Missing required metadata fields\n3. Not checking permissions before actions\n4. Improper handling of ETH values (use ethers.utils.parseEther)\n5. Not validating collectible requirements\n6. Forgetting to include team structure in projects\n7. Not handling rate limiting properly\n\n=== END INTEGRATION GUIDE ===\n      ✔ Should provide comprehensive integration guidelines\n\n  Analytics\n    Member Queries\n      ✔ Should get paginated list of tribe members\n      ✔ Should get most active members based on points\n    Tribe Analytics\n      ✔ Should get popular tribes\n      ✔ Should handle pagination correctly\n    Activity Scores\n      ✔ Should calculate member activity scores correctly\n      ✔ Should handle invalid queries gracefully\n\n  CollectibleController\n    Collectible Creation\n      ✔ Should create a collectible successfully\n    Collectible Claiming\n      ✔ Should allow claiming a collectible with correct payment\n      ✔ Should prevent claiming with insufficient payment\n\n  CommunityPoints\n    Point Redemption\n      ✔ Should allow point redemption with valid signature\n      ✔ Should reject redemption with invalid signature\n      ✔ Should prevent replay attacks\n    Admin Functions\n      ✔ Should allow admin to update verifier\n      ✔ Should prevent non-admin from updating verifier\n\n  EventController\n    Event Creation\n      ✔ Should allow organizer to create event\n      ✔ Should prevent non-organizer from creating event\n    Ticket Purchase\n      ✔ Should allow user to purchase tickets\n      ✔ Should refund excess payment\n      ✔ Should prevent purchase when not enough tickets available\n      ✔ Should prevent purchase with insufficient payment\n    Ticket Transfer\n      ✔ Should allow first transfer\n      ✔ Should prevent second transfer\n      ✔ Should track transfer status correctly\n      ✔ Should handle batch transfers correctly\n    Event Management\n      ✔ Should allow organizer to update metadata\n      ✔ Should prevent non-organizer from updating metadata\n      ✔ Should allow organizer to cancel event\n      ✔ Should prevent ticket purchase after cancellation\n\n  NFT Controller Unit Tests\n    Collectible Creation\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✓ Should allow tribe admin to create a collectible\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent non-admin from creating collectible\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent creating collectible with invalid parameters\n    Collectible Claiming\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✓ Should allow claiming with correct payment and points\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent claiming with insufficient payment\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent claiming with insufficient points\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent claiming beyond max supply\n    Collectible Management\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✓ Should allow admin to deactivate collectible\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent non-admin from deactivating collectible\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent claiming deactivated collectible\n    Direct NFT Interactions\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent direct NFT minting\n\nSetting up test environment...\n✓ RoleManager deployed\n✓ TribeController deployed\n✓ PointSystem deployed\n✓ CollectibleController deployed\n✓ Roles configured\n✓ Test tribe created\n✓ Test members added\n      ✔ ✗ Should prevent unauthorized transfers\n\n  PointSystem\n    Point System Basic Operations\n      ✔ Should award points for actions correctly\n      ✔ Should track action counts correctly\n      ✔ Should allow manual point awards by admin\n    Point System Negative Tests\n      ✔ Should prevent non-admin from awarding points\n      ✔ Should prevent awarding points to non-members\n      ✔ Should prevent deducting more points than available\n    Point System Integration with Collectibles\n      ✔ Should allow claiming collectible with sufficient points\n      ✔ Should prevent claiming collectible without sufficient points\n    Point System Analytics\n      ✔ Should return top members correctly\n    User Flow Scenarios\nPoint values set up:\n- Post: 100 points\n- Comment: 20 points\n- Like: 5 points\n\nScenario: User engagement points tracking\n\nStep 1: User1 creates a post\nUser1 points after posting: 100\n\nStep 2: User2 likes and comments on User1's post\nUser2 points after like and comment: 25\n\nStep 3: User1 creates another post and receives likes\nUser1 points after second post: 200\nUser2 points after second like: 30\n      ✔ Should track user engagement points correctly\nPoint values set up:\n- Post: 100 points\n- Comment: 20 points\n- Like: 5 points\n\nScenario: User milestone achievements\n\nStep 1: Tracking post milestones\nUser1 after 1 posts: 100 points\nUser1 after 2 posts: 200 points\nUser1 after 3 posts: 300 points\nUser1 after 4 posts: 400 points\nUser1 after 5 posts: 500 points\nFinal state - Posts: 5, Points: 500\n      ✔ Should track milestone achievements\nPoint values set up:\n- Post: 100 points\n- Comment: 20 points\n- Like: 5 points\n\nScenario: Community engagement simulation\n\nStep 1: Users engaging in discussion\nUser1 final state - Points: 120, Comments: 1\nUser2 final state - Points: 25, Comments: 1\n      ✔ Should handle community engagement scenario\nPoint values set up:\n- Post: 100 points\n- Comment: 20 points\n- Like: 5 points\n\nScenario: Point redemption flow\n\nStep 1: Building up points\nInitial points accumulated: 450\n\nStep 2: Approving point deduction\n\nStep 3: Redeeming points\nPoints after redemption: 250\n      ✔ Should handle point redemption scenario\n\n  Post Listing Functionality\n    Post Listing Tests\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x1966dc8ff30Bc4AeDEd27178642253b3cCC9AA3f\nDeploying TribeController...\nTribeController deployed at: 0x5f58879Fe3a4330B6D85c1015971Ea6e5175AeDD\nDeploying PostFeedManager...\nPostFeedManager deployed at: 0x582957C7a35CDfeAAD1Ca4b87AE03913eAAd0Be0\nDeploying PointSystem...\nPointSystem deployed at: 0x63ecE4C05B8fB272D16844E96702Ea2f26370982\nDeploying CollectibleController...\nCollectibleController deployed at: 0x3576293Ba6Adacba1A81397db889558Dd91A8519\nDeploying PostMinter...\nPostMinter deployed at: 0x8dF2a20225a5577fB173271c3777CF45305e816d\nGranting admin role to PostMinter in PostFeedManager...\nGranting CREATOR_ROLE to creator...\nGranting RATE_LIMIT_MANAGER_ROLE to test users...\nSetup complete\nCreating test tribe...\nTest tribe created with ID: 0\nCreator already a member of tribe 0\nUser1 joined tribe 0\nUser2 joined tribe 0\n\n=== Testing simple function call ===\nSimple function returned: 42\n      ✔ Should execute a simple test function\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x6B763F54D260aFF608CbbAeD8721c96992eC24Db\nDeploying TribeController...\nTribeController deployed at: 0xF48883F2ae4C4bf4654f45997fE47D73daA4da07\nDeploying PostFeedManager...\nPostFeedManager deployed at: 0x226A19c076a3047a53e5430B14bcDB42dbccA159\nDeploying PointSystem...\nPointSystem deployed at: 0xA5c9020ea95324a05B48491FB3e61Ba111E5dd95\nDeploying CollectibleController...\nCollectibleController deployed at: 0x093D305366218D6d09bA10448922F10814b031dd\nDeploying PostMinter...\nPostMinter deployed at: 0x061FB3749C4eD5e3c2d28a284940093cfDFcBa20\nGranting admin role to PostMinter in PostFeedManager...\nGranting CREATOR_ROLE to creator...\nGranting RATE_LIMIT_MANAGER_ROLE to test users...\nSetup complete\nCreating test tribe...\nTest tribe created with ID: 0\nCreator already a member of tribe 0\nUser1 joined tribe 0\nUser2 joined tribe 0\n\n=== Testing get all posts with pagination ===\nVerifying creator is an active member of tribe 0...\nCreator membership status: 1\nCreator membership status numeric value: 1\nIs creator an active tribe member? true\nCreating posts for pagination testing...\nCreating post 0 by creator...\nAbout to call createPost with tribeId=0, metadata={\"title\":\"Test Post #0\",\"content\":\"This is test post #0\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image0.jpg\"},\"createdAt\":\"2025-04-17T20:25:28.990Z\"}\nCreated post with ID: 0\nCreating post 1 by creator...\nAbout to call createPost with tribeId=0, metadata={\"title\":\"Test Post #1\",\"content\":\"This is test post #1\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image1.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.021Z\"}\nCreated post with ID: 1\nCreating post 2 by creator...\nAbout to call createPost with tribeId=0, metadata={\"title\":\"Test Post #2\",\"content\":\"This is test post #2\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image2.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.039Z\"}\nCreated post with ID: 2\nCreating post 3 by creator...\nAbout to call createPost with tribeId=0, metadata={\"title\":\"Test Post #3\",\"content\":\"This is test post #3\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image3.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.053Z\"}\nCreated post with ID: 3\nCreating post 4 by creator...\nAbout to call createPost with tribeId=0, metadata={\"title\":\"Test Post #4\",\"content\":\"This is test post #4\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image4.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.066Z\"}\nCreated post with ID: 4\nTesting pagination...\nPage 1 post count: 2\nPage 2 post count: 2\nPage 3 post count: 1\nPost 0 metadata: {\"title\":\"Test Post #0\",\"content\":\"This is test post #0\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image0.jpg\"},\"createdAt\":\"2025-04-17T20:25:28.990Z\"}\nPost 1 metadata: {\"title\":\"Test Post #1\",\"content\":\"This is test post #1\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image1.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.021Z\"}\nPost 2 metadata: {\"title\":\"Test Post #2\",\"content\":\"This is test post #2\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image2.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.039Z\"}\nPost 3 metadata: {\"title\":\"Test Post #3\",\"content\":\"This is test post #3\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image3.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.053Z\"}\nPost 4 metadata: {\"title\":\"Test Post #4\",\"content\":\"This is test post #4\",\"type\":\"TEXT\",\"media\":{\"type\":\"image\",\"url\":\"https://example.com/image4.jpg\"},\"createdAt\":\"2025-04-17T20:25:29.066Z\"}\n      ✔ Should get all posts with pagination (99ms)\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x50cf1849e32E6A17bBFF6B1Aa8b1F7B479Ad6C12\nDeploying TribeController...\nTribeController deployed at: 0xC1dC7a8379885676a6Ea08E67b7Defd9a235De71\nDeploying PostFeedManager...\nPostFeedManager deployed at: 0xf0F5e9b00b92f3999021fD8B88aC75c351D93fc7\nDeploying PointSystem...\nPointSystem deployed at: 0xCC9676b9bf25cE45a3a5F88205239aFdDeCF1BC7\nDeploying CollectibleController...\nCollectibleController deployed at: 0xe58cBE144dD5556C84874deC1b3F2d0D6Ac45F1b\nDeploying PostMinter...\nPostMinter deployed at: 0xDC0a0B1Cd093d321bD1044B5e0Acb71b525ABb6b\nGranting admin role to PostMinter in PostFeedManager...\nGranting CREATOR_ROLE to creator...\nGranting RATE_LIMIT_MANAGER_ROLE to test users...\nSetup complete\nCreating test tribe...\nTest tribe created with ID: 0\nCreator already a member of tribe 0\nUser1 joined tribe 0\nUser2 joined tribe 0\n\n=== Testing get all posts by user ===\nCreating posts by user1...\nCreated post with ID: 0\nCreated post with ID: 1\nCreated post with ID: 2\nRetrieved 3 posts for user1\n      ✔ Should get all posts by user (40ms)\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xA899118f4BCCb62F8c6A37887a4F450D8a4E92E0\nDeploying TribeController...\nTribeController deployed at: 0xb60971942E4528A811D24826768Bc91ad1383D21\nDeploying PostFeedManager...\nPostFeedManager deployed at: 0xD185B4846E5fd5419fD4D077dc636084BEfC51C0\nDeploying PointSystem...\nPointSystem deployed at: 0xF94AB55a20B32AC37c3A105f12dB535986697945\nDeploying CollectibleController...\nCollectibleController deployed at: 0xBCF063A9eB18bc3C6eB005791C61801B7cB16fe4\nDeploying PostMinter...\nPostMinter deployed at: 0xF62eEc897fa5ef36a957702AA4a45B58fE8Fe312\nGranting admin role to PostMinter in PostFeedManager...\nGranting CREATOR_ROLE to creator...\nGranting RATE_LIMIT_MANAGER_ROLE to test users...\nSetup complete\nCreating test tribe...\nTest tribe created with ID: 0\nCreator already a member of tribe 0\nUser1 joined tribe 0\nUser2 joined tribe 0\n\n=== Testing get post feed for user ===\nCreating posts for the feed from different users...\nCreated post from user1 with ID: 0\nCreated post from user2 with ID: 1\nRetrieved 2 posts in feed for user1\nFeed post IDs: 1, 0\nExpected post IDs: 0, 1\n      ✔ Should get post feed for user\n\n  PostMinter Scenarios\n    Basic Post Creation and Access\n\nScenario: Creating a public post as a tribe member\nStep 1: Creating public post\nPost created with ID: 0\n\nStep 2: Verifying post data\nPost data verified successfully\n\nStep 3: Checking post access\nAccess control verified successfully\n      ✔ Should allow tribe member to create a public post\n\nScenario: Creating and managing a collectible-gated post\nStep 1: User2 claiming collectible\nCollectible claimed successfully\n\nStep 2: Creating collectible-gated post\nGated post created with ID: 0\n\nStep 3: Verifying access control\nUser2 (with collectible) can view post\nUser3 (without collectible) cannot view post\n      ✔ Should create and manage collectible-gated post\n\nScenario: Creating and managing an encrypted post\nStep 1: Setting up tribe encryption\nTribe encryption key set\n\nStep 2: Creating encrypted post\nEncrypted post created with ID: 0\n\nStep 3: Verifying post encryption\nPost encryption verified\n\nStep 4: Checking decryption key access\nDecryption key access verified\n\nStep 5: Verifying key derivation\nKey derivation verified\n      ✔ Should handle encrypted posts with proper key management\n    Negative Scenarios\n\nScenario: Attempting post creation as non-member\nNon-member post creation prevented successfully\n      ✔ Should prevent non-members from creating posts\n\nScenario: Testing post creation cooldown\nStep 1: Creating first post\nFirst post created\n\nStep 2: Attempting immediate second post\nCooldown enforcement verified\n      ✔ Should enforce post creation cooldown\n\nScenario: Testing collectible validation\nInvalid collectible validation successful\n      ✔ Should validate collectible requirements\n\nScenario: Testing unauthorized encryption key access\nStep 1: Creating encrypted post\nEncrypted post created with ID: 0\n\nStep 2: Attempting unauthorized key access\nUnauthorized key access prevented\n      ✔ Should prevent unauthorized encryption key access\n    Feed Querying\n\nSetting up feed test data\nCreated 10 test posts\n\nScenario: Testing paginated tribe posts retrieval\nStep 1: Retrieving first page (3 posts)\nRetrieved 3 posts from first page\n\nStep 2: Retrieving second page (3 posts)\nRetrieved 3 posts from second page\nVerified no duplicate posts between pages\n      ✔ Should retrieve paginated posts by tribe\n\nSetting up feed test data\nCreated 20 test posts\n\nScenario: Testing paginated user posts retrieval\nStep 1: Retrieving user1's posts\nRetrieved 5 posts for user1\n\nStep 2: Retrieving user2's posts with pagination\nRetrieved 3 posts for user2 (first page)\nVerified post ownership\n      ✔ Should retrieve paginated posts by user\n\nSetting up feed test data\nCreated 30 test posts\n\nScenario: Testing paginated tribe-user posts retrieval\nStep 1: Retrieving user1's posts in tribe\nRetrieved 3 posts for user1 in tribe\nVerified post ownership and tribe membership\n      ✔ Should retrieve paginated posts by tribe and user\n\nSetting up feed test data\nCreated 40 test posts\n\nScenario: Testing user feed retrieval\nStep 1: Creating second tribe and posts\nCreated additional posts in second tribe\n\nStep 2: Retrieving user feed\nRetrieved 5 posts from user feed\nFeed contains posts from both tribes (Tribe1: 2, Tribe2: 3)\n      ✔ Should retrieve user feed across tribes\n\n  RoleManager\n    Role Assignment\n      ✔ Should assign roles correctly\n      ✔ Should remove roles correctly\n      ✔ Should only allow admin to assign roles\n    Role Verification\n      ✔ Should check for any role correctly\n      ✔ Should check for all roles correctly\n      ✔ Should get user roles correctly\n    Special Fan Role Assignment\n      ✔ Should allow admin to assign fan role\n      ✔ Should not allow non-admin to assign fan role\n    User Role Access\n      ✔ Should allow user to access community features if they have the correct role\n\n  Tribe Listing Functionality\n    Tribe Listing Tests\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x0Ff833129533546D96A5847C22b57AACccD00FD5\nDeploying TribeController...\nTribeController deployed at: 0x26320DE63415e5AAf2BA617D97C39444eDb6F741\nGranting CREATOR_ROLE to creator...\nSetup complete\n\n=== Testing get total tribes ===\nCreated tribe Ethereum with ID: 0\nCreated tribe Bitcoin with ID: 1\nCreated tribe Solana with ID: 2\nCreated tribe Monad with ID: 3\nCreated tribe Arbitrum with ID: 4\nTotal tribes count: 5\n      ✔ Should get total number of tribes\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x2550d6424b46f78F4E31F1CCf88Da26dda7826C6\nDeploying TribeController...\nTribeController deployed at: 0xDb731EaaFA0FFA7854A24C2379585a85D768Ed5C\nGranting CREATOR_ROLE to creator...\nSetup complete\n\n=== Testing get all tribes with pagination ===\nCreated tribe Ethereum with ID: 0\nCreated tribe Bitcoin with ID: 1\nCreated tribe Solana with ID: 2\nCreated tribe Monad with ID: 3\nCreated tribe Arbitrum with ID: 4\nCreated tribe Polygon with ID: 5\nCreated tribe Avalanche with ID: 6\nPage 1 tribe count: 3\nPage 2 tribe count: 3\nPage 3 tribe count: 1\n      ✔ Should get all tribes with pagination\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xa86582Ad5E80abc19F95f8A9Fb3905Cda0dAbd59\nDeploying TribeController...\nTribeController deployed at: 0x97915c43511f8cB4Fbe7Ea03B96EEe940eC4AF12\nGranting CREATOR_ROLE to creator...\nSetup complete\n\n=== Testing get tribe details with metadata ===\nCreated tribe Ethereum DAO with ID: 0\nTribe details: {\"id\":0,\"name\":\"Ethereum DAO\",\"metadata\":\"ipfs://QmTribeMetadataEthereum\",\"admin\":\"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\",\"joinType\":0,\"entryFee\":0,\"memberCount\":1,\"isActive\":true,\"canMerge\":true}\n      ✔ Should get tribe details with metadata\n\n  Tribe Metadata and NFT Requirements\n    Tribe Creation with Metadata\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xA002B84Ca3c9e8748209F286Ecf99300CA50161A\nDeploying TribeController...\nTribeController deployed at: 0x4633394E4Fd1175273845d7F0d6A5F613309d384\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n\n=== Testing tribe creation with metadata ===\nCreating tribe...\nWaiting for transaction confirmation...\nTribe created with ID: 0\nVerifying tribe configuration...\nTribe verification complete\n      ✔ Should create a tribe with detailed metadata\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x7722f5d7964a04672761cdfdC7c17B7Ac8f197b7\nDeploying TribeController...\nTribeController deployed at: 0xeA2e668d430e5AA15babA2f5c5edfd4F9Ef6EB73\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n\n=== Testing tribe creation with NFT requirement ===\nCreating initial tribe...\nWaiting for transaction confirmation...\nInitial tribe created with ID: 0\nCreating collectible NFT...\nCollectible created with ID: 0\nUpdating tribe to require NFT...\nTribe updated to NFT_GATED\nUser1 claiming collectible...\nUser1 claimed collectible\nTesting User1 joining tribe (should succeed)...\nUser1 successfully joined tribe\nTesting User2 joining tribe (should fail)...\nUser2 correctly prevented from joining\n      ✔ Should create a tribe with collectible requirement\n    Tribe Membership and Role Management\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xdA796117bF6905DD8DB2fF1ab4397f6d2c4ADda3\nDeploying TribeController...\nTribeController deployed at: 0x222D74f33b0d07687a769A44399E2272A4cB9FfE\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n      ✔ Should track member roles and permissions\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x74Ce26A2e4c1368C48A0157CE762944d282896Db\nDeploying TribeController...\nTribeController deployed at: 0x7c77704007C9996Ee591C516f7319828BA49d91E\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n      ✔ Should track tribe membership accurately\n    Tribe Metadata Loading and Updates\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x81a5186946ce055a5ceeC93cd97C7e7EDe7Da922\nDeploying TribeController...\nTribeController deployed at: 0x98F74b7C96497070ba5052E02832EF9892962e62\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n      ✔ Should load tribe metadata with member information\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xF8b1d4d0A2Dd9Dd53200A4C6783a69c15E3a25F4\nDeploying TribeController...\nTribeController deployed at: 0xD6b8Eb34413f07a1a67A469345cFEa6633efd58d\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n      ✔ Should handle user membership queries efficiently\n    Tribe Joining Scenarios\n      NFT Gated Tribe\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xf4c5C29b14f0237131F7510A51684c8191f98E06\nDeploying TribeController...\nTribeController deployed at: 0x934A389CaBFB84cdB3f0260B2a4FD575b8B345A3\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should allow joining before NFT requirement is set\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x10d16E2A026C4b5264A2aAC51cA65749cDf2037E\nDeploying TribeController...\nTribeController deployed at: 0xAf7868a9BB72E16B930D50636519038d7F057470\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should prevent joining after NFT requirement is set without NFT\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x240A60DC5e0B9013Cb8CF39aa6f9dDd8f25E40D2\nDeploying TribeController...\nTribeController deployed at: 0x3aD2306eDfBe72ce013cdb6b429212d9CdDE4F96\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should allow joining after acquiring required NFT\n      Invite Code Tribe\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x4a680B00eEacbcCA480eB9aB57161A7B08A8F0Ba\nDeploying TribeController...\nTribeController deployed at: 0xEFdc56feF9E089b086DD0a335F2c8c8CcB7E3031\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should not allow direct joining without invite code\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xEd3AAE51d33138ef67555AE0925A38E77Df5B7e0\nDeploying TribeController...\nTribeController deployed at: 0x76C9284988B979f750BC504173ADc08E00c04398\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should allow joining with valid invite code\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x7314AEeC874A25A1131F49dA9679D05f8d931175\nDeploying TribeController...\nTribeController deployed at: 0xD604C06206f6DeDd82d42F90D1F5bB34a2E7c5dd\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should not allow joining with invalid invite code\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x8233369E29653b70E50E93d1276a50B8f2122a01\nDeploying TribeController...\nTribeController deployed at: 0x6B99600daD0a1998337357696827381D122825F3\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should track invite code usage correctly\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xDAb28073Fa01A171D2AF5707F3b7D2F065bE95dD\nDeploying TribeController...\nTribeController deployed at: 0x566be608Fe7e9f23c9337004cfB60877810E6d28\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle invite code expiry correctly\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xD48e3A91809d6983e2bcc5bA6A6834258854e85e\nDeploying TribeController...\nTribeController deployed at: 0xeA503D963ecFF34BfFd3C3E8a2Ee3C25839deA7B\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should enforce invite code usage limits\n      Private Tribe\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x7711d80d7B485d4ce1651284Dd9b8e19142F3748\nDeploying TribeController...\nTribeController deployed at: 0x874B971cBE686566FCc9437A12E5418301Cd60AA\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should set member status to PENDING when requesting to join\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x3153eDfaBE7608A97d0Cb02929917FE90cE2CB87\nDeploying TribeController...\nTribeController deployed at: 0xEbFE59025761DB00993d75C33C58271aABA88E4E\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should allow admin to approve pending member\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x08A90aF9A6eBBe11c322AD9930CC58E122231B5A\nDeploying TribeController...\nTribeController deployed at: 0x7E6C94173C264aaE66Bf36ce047b0Aef585C2181\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should allow admin to reject pending member\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x47330D2fe6F75899597C14d615003Ef561B01B14\nDeploying TribeController...\nTribeController deployed at: 0xCD75Ddf910A204d36Fc2f86e776f9d7B97A34817\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should not allow non-admin to approve/reject members\n    Tribe Role Management and Actions\n      Role-based Access Control\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x8AAFC28174bb6c3BDc7BE92f18c2F134E876c05E\nDeploying TribeController...\nTribeController deployed at: 0xA272fB0D17DC50652Fda5cF1651C6f8f21Fb02A8\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should allow moderator to perform moderation actions\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x37D85d30aC1C7Bfa6a09e8096171e2977edb52cc\nDeploying TribeController...\nTribeController deployed at: 0x121f7e412A536D673DaB310F1448ce0e3843068a\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should prevent regular members from performing admin actions\n      Member Management\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x4c0bF4C73f2Cf53259C84694b2F26Adc4916921e\nDeploying TribeController...\nTribeController deployed at: 0x33CDe30fF16bC06D9b94987a8269B69DBF321937\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle member banning correctly\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x7188450134eFbda4591D303dA02BE644Bb4B63Fb\nDeploying TribeController...\nTribeController deployed at: 0x488b54Cf1b3F65Fa0cf76889ccb78afD2a054f4E\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle member approval flow correctly\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x17b6BBD34266Ed4d6770D9Ed643Fc24eE1a1197B\nDeploying TribeController...\nTribeController deployed at: 0x2bf05b061eF80b63ba3bd7c3fcC1Bb505a7b9e7C\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle member rejection flow correctly\n      Invite Code Management\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xc67f6C6bCc2E2810E4CED484B8Ea44C91a82b683\nDeploying TribeController...\nTribeController deployed at: 0xe970650DC9d7E0909Af7617F36B862dA931B76e9\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should manage invite codes correctly\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xf30D040c8FE6a3ee53355E9D3b7A07cea477b8D8\nDeploying TribeController...\nTribeController deployed at: 0x3940C74711923bB4bdbA231c360baA7F032b5F0D\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle invite code revocation\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x242e50f40E771da8F19aAF1b813658A8562B2ad2\nDeploying TribeController...\nTribeController deployed at: 0x366FDba679A8ece0567C1aFFC8C543f6FE9964d5\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should enforce invite code usage limits\n      Tribe Configuration Updates\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0xBc1065371D4c6FD32C12f35241793557bd3D85B9\nDeploying TribeController...\nTribeController deployed at: 0x82C9d5501a2C46125A82cc82D0881FA27751EA3E\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle join type changes correctly\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x380de6769c9ECC5e8D032F8a3904bF17DC852cA5\nDeploying TribeController...\nTribeController deployed at: 0xf165a31DcBB4d2F00CB31532D1D0a27Bb80aa49d\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle entry fee changes\n      Member Status Transitions\n\n=== Setting up test environment ===\nSigners initialized\nDeploying RoleManager...\nRoleManager deployed at: 0x909B91a21d0F86709C4eec651E82A4eFB028C330\nDeploying TribeController...\nTribeController deployed at: 0xA45e2E9F6FEE59EdFa2586c6eF7ecee1F9caC51c\nDeploying ContentManager...\nContentManager deployed\nDeploying PointSystem...\nPointSystem deployed\nDeploying CollectibleController...\nCollectibleController deployed\nGranting CREATOR_ROLE to creator...\nSetup complete\n        ✔ Should handle all member status transitions correctly\n\n  Voting\n    Journey 5.1: Create Proposal\n      ✔ Should allow creating a proposal\n      ✔ Should increment proposalId after each creation\n    Journey 5.2: Vote on Proposal\n      ✔ Should allow voting on proposal\n      ✔ Should track vote counts correctly\n    Journey 5.3: Unauthorized Vote Attempt\n      ✔ Should emit vote event regardless of vote choice\n      ✔ Should only count positive votes\n\n\n  238 passing (8s)\n\n"
}