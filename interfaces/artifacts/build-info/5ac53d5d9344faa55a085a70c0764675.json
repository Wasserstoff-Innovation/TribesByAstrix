{
	"id": "5ac53d5d9344faa55a085a70c0764675",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"interfaces/IPostMinter.sol": {
				"content": "pragma solidity ^0.8.0;\n\ninterface IPostMinter {\n    // Post structure\n    struct Post {\n        address author;\n        uint256 tribeId;\n        string metadataHash; // IPFS/Arweave hash of post metadata\n        //... other fields like post type, timestamp, etc.\n    }\n\n    // Create a new post\n    function createPost(uint256 tribeId, string memory metadataHash) external;\n\n    //... other functions for interacting with posts (e.g., commenting, liking)\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"interfaces/IPostMinter.sol": {
				"IPostMinter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tribeId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataHash",
									"type": "string"
								}
							],
							"name": "createPost",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPost(uint256,string)": "a9ca3a4c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tribeId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataHash\",\"type\":\"string\"}],\"name\":\"createPost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IPostMinter.sol\":\"IPostMinter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPostMinter.sol\":{\"keccak256\":\"0xc2bc08b123f7f4e4d1bc72501546fa2f9dcbea123b3e748dc732add29e05f06e\",\"urls\":[\"bzz-raw://875ef87cbda73ba1dddcf6a12fd94a83a1ca5476ff54da6c88dcf585ab20fd88\",\"dweb:/ipfs/QmQiDtp9vszBdmaj9EmaBGEyF8Z6ertJGPqmE1sqKif8ri\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> interfaces/IPostMinter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "interfaces/IPostMinter.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"interfaces/IPostMinter.sol": {
				"ast": {
					"absolutePath": "interfaces/IPostMinter.sol",
					"exportedSymbols": {
						"IPostMinter": [
							16
						]
					},
					"id": 17,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPostMinter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "IPostMinter",
							"nameLocation": "35:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPostMinter.Post",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "author",
											"nameLocation": "105:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "97:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "97:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "tribeId",
											"nameLocation": "129:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "121:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "121:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "metadataHash",
											"nameLocation": "153:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "146:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 6,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "146:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Post",
									"nameLocation": "82:4:0",
									"nodeType": "StructDefinition",
									"scope": 16,
									"src": "75:194:0",
									"visibility": "public"
								},
								{
									"functionSelector": "a9ca3a4c",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPost",
									"nameLocation": "309:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "tribeId",
												"nameLocation": "328:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "320:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "metadataHash",
												"nameLocation": "351:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "337:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:45:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:0:0"
									},
									"scope": 16,
									"src": "300:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 17,
							"src": "25:432:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:457:0"
				},
				"id": 0
			}
		}
	}
}